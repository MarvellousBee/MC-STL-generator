#pragma once
#include <map>
#include <string>
#include <vector>
#include "XValues.h"


namespace StlTemplates
{
    struct STLtriangle
    {
        Point3f normal{};
        std::vector<Point3f> coordinates{};
    };
    std::map<std::string, std::vector<STLtriangle>> template_map
    {
        {
            "cube",
            {{
        {-0.000000e+00, 0.000000e+00, 1.000000e+00},
        {
            {0.000000e+00, 1.000000e+00, 1.000000e+00},
            {0.000000e+00, 0.000000e+00, 1.000000e+00},
            {1.000000e+00, 1.000000e+00, 1.000000e+00}
        }
    },
    {
        {0.000000e+00, 0.000000e+00, 1.000000e+00},
        {
            {1.000000e+00, 1.000000e+00, 1.000000e+00},
            {0.000000e+00, 0.000000e+00, 1.000000e+00},
            {1.000000e+00, 0.000000e+00, 1.000000e+00}
        }
    },
    {
        {-0.000000e+00, -0.000000e+00, -1.000000e+00},
        {
            {1.000000e+00, 1.000000e+00, 0.000000e+00},
            {1.000000e+00, 0.000000e+00, 0.000000e+00},
            {0.000000e+00, 1.000000e+00, 0.000000e+00}
        }
    },
    {
        {0.000000e+00, 0.000000e+00, -1.000000e+00},
        {
            {0.000000e+00, 1.000000e+00, 0.000000e+00},
            {1.000000e+00, 0.000000e+00, 0.000000e+00},
            {0.000000e+00, 0.000000e+00, 0.000000e+00}
        }
    },
    {
        {1.000000e+00, -0.000000e+00, 0.000000e+00},
        {
            {1.000000e+00, 0.000000e+00, 1.000000e+00},
            {1.000000e+00, 0.000000e+00, 0.000000e+00},
            {1.000000e+00, 1.000000e+00, 1.000000e+00}
        }
    },
    {
        {1.000000e+00, 0.000000e+00, 0.000000e+00},
        {
            {1.000000e+00, 1.000000e+00, 1.000000e+00},
            {1.000000e+00, 0.000000e+00, 0.000000e+00},
            {1.000000e+00, 1.000000e+00, 0.000000e+00}
        }
    },
    {
        {0.000000e+00, -1.000000e+00, 0.000000e+00},
        {
            {0.000000e+00, 0.000000e+00, 1.000000e+00},
            {0.000000e+00, 0.000000e+00, 0.000000e+00},
            {1.000000e+00, 0.000000e+00, 1.000000e+00}
        }
    },
    {
        {0.000000e+00, -1.000000e+00, -0.000000e+00},
        {
            {1.000000e+00, 0.000000e+00, 1.000000e+00},
            {0.000000e+00, 0.000000e+00, 0.000000e+00},
            {1.000000e+00, 0.000000e+00, 0.000000e+00}
        }
    },
    {
        {-1.000000e+00, -0.000000e+00, -0.000000e+00},
        {
            {0.000000e+00, 1.000000e+00, 1.000000e+00},
            {0.000000e+00, 1.000000e+00, 0.000000e+00},
            {0.000000e+00, 0.000000e+00, 1.000000e+00}
        }
    },
    {
        {-1.000000e+00, 0.000000e+00, 0.000000e+00},
        {
            {0.000000e+00, 0.000000e+00, 1.000000e+00},
            {0.000000e+00, 1.000000e+00, 0.000000e+00},
            {0.000000e+00, 0.000000e+00, 0.000000e+00}
        }
    },
    {
        {0.000000e+00, 1.000000e+00, 0.000000e+00},
        {
            {1.000000e+00, 1.000000e+00, 1.000000e+00},
            {1.000000e+00, 1.000000e+00, 0.000000e+00},
            {0.000000e+00, 1.000000e+00, 1.000000e+00}
        }
    },
    {
        {0.000000e+00, 1.000000e+00, 0.000000e+00},
        {
            {0.000000e+00, 1.000000e+00, 1.000000e+00},
            {1.000000e+00, 1.000000e+00, 0.000000e+00},
            {0.000000e+00, 1.000000e+00, 0.000000e+00}
        }
    }}
        }
    };
}


